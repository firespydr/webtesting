#!/bin/bash
# This script automates the setup of a Linode VM (Ubuntu) with Podman and Caddy.
# It updates the OS, sets firewall rules, installs Podman, and deploys a Caddy container
# using a docker-compose file. The container will serve a simple landing page from /var/www.

# --- Configuration Variables ---
# These variables are requested from the user:
read -p "Enter the public IP address of the VM: " PUBLIC_IP
read -p "Enter the full project path (absolute path) (e.g., /opt/projects): " PROJECT_PATH
read -p "Enter the project name: " PROJECT_NAME

# Derived variables:
PROJECT_DIR="${PROJECT_PATH}/${PROJECT_NAME}"
COMPOSE_FILE="${PROJECT_DIR}/docker-compose.yml"
CADDY_CONFIG_DIR="${PROJECT_DIR}/caddy/config"
CADDY_WEBROOT_DIR="${PROJECT_DIR}/caddy/webroot"
CADDY_DATA_DIR="${PROJECT_DIR}/caddy/data"

# --- 1. Update Host OS ---
echo "Updating the host OS..."
sudo apt update && sudo apt upgrade -y
echo "Host OS Updated..."

# --- 2. Setup UFW Firewall Rules ---
echo "Configuring ufw firewall..."
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow OpenSSH
# Allow the host ports that will be used by Caddy (container maps: 8080->80, 8443->443)
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
sudo ufw --force enable
echo "Current ufw status:"
sudo ufw status verbose

# --- 3. Test SSH Access (Manual Step) ---
echo -e "\nPlease test SSH access from another terminal or client using:"
echo "  ssh root@${PUBLIC_IP}"
echo "If SSH access is not working, please fix it before proceeding."
read -p "Press Enter to continue once SSH access is confirmed..."

# --- 4. Install Podman ---
echo "Installing Podman..."
sudo apt install -y podman
